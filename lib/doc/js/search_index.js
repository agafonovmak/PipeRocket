var search_data = {"index":{"searchIndex":["piperocket","deal","dealfield","engine","entity","error","field","fieldservice","note","organization","organizationfield","person","personfield","personservice","pipeline","service","stage","user","pipedrive","all()","assign_custom_fields()","build_entity()","build_uri()","clear_key()","create()","deal_fields()","deals()","display_name()","display_stage_name()","find()","find_by_email()","first()","key_field_hash()","key_field_hash()","key_field_hash()","key_field_hash()","key_name_hash()","name_key_hash()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notes()","options_hash()","organization_fields()","organizations()","person_fields()","persons()","pipeline()","pipelines()","stage()","stages()","transform_custom_fields()","transform_field_name()","update()","value()"],"longSearchIndex":["piperocket","piperocket::deal","piperocket::dealfield","piperocket::engine","piperocket::entity","piperocket::error","piperocket::field","piperocket::fieldservice","piperocket::note","piperocket::organization","piperocket::organizationfield","piperocket::person","piperocket::personfield","piperocket::personservice","piperocket::pipeline","piperocket::service","piperocket::stage","piperocket::user","pipedrive","piperocket::service#all()","piperocket::entity#assign_custom_fields()","piperocket::service#build_entity()","piperocket::service#build_uri()","piperocket::service#clear_key()","piperocket::service#create()","pipedrive::deal_fields()","pipedrive::deals()","piperocket::stage#display_name()","piperocket::deal#display_stage_name()","piperocket::service#find()","piperocket::personservice#find_by_email()","piperocket::service#first()","piperocket::deal::key_field_hash()","piperocket::fieldservice#key_field_hash()","piperocket::organization::key_field_hash()","piperocket::person::key_field_hash()","piperocket::fieldservice#key_name_hash()","piperocket::fieldservice#name_key_hash()","piperocket::deal::new()","piperocket::entity::new()","piperocket::error::new()","piperocket::field::new()","piperocket::fieldservice::new()","piperocket::organization::new()","piperocket::person::new()","piperocket::personservice::new()","piperocket::service::new()","pipedrive::notes()","piperocket::field#options_hash()","pipedrive::organization_fields()","pipedrive::organizations()","pipedrive::person_fields()","pipedrive::persons()","piperocket::stage#pipeline()","pipedrive::pipelines()","piperocket::deal#stage()","pipedrive::stages()","piperocket::service#transform_custom_fields()","piperocket::entity#transform_field_name()","piperocket::service#update()","piperocket::field#value()"],"info":[["PipeRocket","","PipeRocket.html","",""],["PipeRocket::Deal","","PipeRocket/Deal.html","",""],["PipeRocket::DealField","","PipeRocket/DealField.html","",""],["PipeRocket::Engine","","PipeRocket/Engine.html","",""],["PipeRocket::Entity","","PipeRocket/Entity.html","",""],["PipeRocket::Error","","PipeRocket/Error.html","",""],["PipeRocket::Field","","PipeRocket/Field.html","",""],["PipeRocket::FieldService","","PipeRocket/FieldService.html","",""],["PipeRocket::Note","","PipeRocket/Note.html","",""],["PipeRocket::Organization","","PipeRocket/Organization.html","",""],["PipeRocket::OrganizationField","","PipeRocket/OrganizationField.html","",""],["PipeRocket::Person","","PipeRocket/Person.html","",""],["PipeRocket::PersonField","","PipeRocket/PersonField.html","",""],["PipeRocket::PersonService","","PipeRocket/PersonService.html","",""],["PipeRocket::Pipeline","","PipeRocket/Pipeline.html","",""],["PipeRocket::Service","","PipeRocket/Service.html","",""],["PipeRocket::Stage","","PipeRocket/Stage.html","",""],["PipeRocket::User","","PipeRocket/User.html","",""],["Pipedrive","","Pipedrive.html","",""],["all","PipeRocket::Service","PipeRocket/Service.html#method-i-all","()","<p>Getting all @resource_name object from Pipedrive\n"],["assign_custom_fields","PipeRocket::Entity","PipeRocket/Entity.html#method-i-assign_custom_fields","(key_name_hash, entity_hash)","<p>Assign custom fields, using their names but not keys\n"],["build_entity","PipeRocket::Service","PipeRocket/Service.html#method-i-build_entity","(raw)","<p>Build resource_name class object from hash\n"],["build_uri","PipeRocket::Service","PipeRocket/Service.html#method-i-build_uri","(params = {}, specificator = nil)","<p>Build uri for request\n"],["clear_key","PipeRocket::Service","PipeRocket/Service.html#method-i-clear_key","(key)","<p>Clear string from forbidden symbols for ruby variables\n"],["create","PipeRocket::Service","PipeRocket/Service.html#method-i-create","(params)","<p>Create @resource_name in Pipedrive\n"],["deal_fields","Pipedrive","Pipedrive.html#method-c-deal_fields","()","<p>Getting deal_fields service object(PipeRocket::FieldServcice)\n"],["deals","Pipedrive","Pipedrive.html#method-c-deals","()","<p>Getting deal service object(PipeRocket::Servcice)\n"],["display_name","PipeRocket::Stage","PipeRocket/Stage.html#method-i-display_name","()","<p>Returns stage name like PipelineName:StageName\n"],["display_stage_name","PipeRocket::Deal","PipeRocket/Deal.html#method-i-display_stage_name","()","<p>Returns stage name like PipelineName:StageName\n"],["find","PipeRocket::Service","PipeRocket/Service.html#method-i-find","(id)","<p>Find @resource_name object by id\n"],["find_by_email","PipeRocket::PersonService","PipeRocket/PersonService.html#method-i-find_by_email","(email)","<p>Find person by email\n"],["first","PipeRocket::Service","PipeRocket/Service.html#method-i-first","()","<p>Getting first @resource_name object\n"],["key_field_hash","PipeRocket::Deal","PipeRocket/Deal.html#method-c-key_field_hash","()","<p>Returns hash {custom_field_key: PipeRocket::Field object}\n"],["key_field_hash","PipeRocket::FieldService","PipeRocket/FieldService.html#method-i-key_field_hash","()","<p>Returns hash {custom_field_key: PipeRocket::Field object}\n"],["key_field_hash","PipeRocket::Organization","PipeRocket/Organization.html#method-c-key_field_hash","()","<p>Returns hash {custom_field_key: PipeRocket::Field object}\n"],["key_field_hash","PipeRocket::Person","PipeRocket/Person.html#method-c-key_field_hash","()","<p>Returns hash {custom_field_key: PipeRocket::Field object}\n"],["key_name_hash","PipeRocket::FieldService","PipeRocket/FieldService.html#method-i-key_name_hash","()","<p>Returns hash {custom_field_key: custom_field_name}\n"],["name_key_hash","PipeRocket::FieldService","PipeRocket/FieldService.html#method-i-name_key_hash","()","<p>Returns hash {custom_field_name: custom_field_key}\n"],["new","PipeRocket::Deal","PipeRocket/Deal.html#method-c-new","(hash)",""],["new","PipeRocket::Entity","PipeRocket/Entity.html#method-c-new","(hash)",""],["new","PipeRocket::Error","PipeRocket/Error.html#method-c-new","(code)",""],["new","PipeRocket::Field","PipeRocket/Field.html#method-c-new","(hash)",""],["new","PipeRocket::FieldService","PipeRocket/FieldService.html#method-c-new","(resource_name)",""],["new","PipeRocket::Organization","PipeRocket/Organization.html#method-c-new","(hash)",""],["new","PipeRocket::Person","PipeRocket/Person.html#method-c-new","(hash)",""],["new","PipeRocket::PersonService","PipeRocket/PersonService.html#method-c-new","(resource_name)",""],["new","PipeRocket::Service","PipeRocket/Service.html#method-c-new","(resource_name)",""],["notes","Pipedrive","Pipedrive.html#method-c-notes","()","<p>Getting note service object(PipeRocket::Servcice)\n"],["options_hash","PipeRocket::Field","PipeRocket/Field.html#method-i-options_hash","()","<p>Return hash {option_id: option_value}\n"],["organization_fields","Pipedrive","Pipedrive.html#method-c-organization_fields","()","<p>Getting organization_field service object(PipeRocket::FieldServcice)\n"],["organizations","Pipedrive","Pipedrive.html#method-c-organizations","()","<p>Getting organization service object(PipeRocket::Servcice)\n"],["person_fields","Pipedrive","Pipedrive.html#method-c-person_fields","()","<p>Getting person_field service object(PipeRocket::FieldServcice)\n"],["persons","Pipedrive","Pipedrive.html#method-c-persons","()","<p>Getting person service object(PipeRocket::PersonServcice)\n"],["pipeline","PipeRocket::Stage","PipeRocket/Stage.html#method-i-pipeline","()","<p>Return PipeRocket::Pipeline object which related with stage\n"],["pipelines","Pipedrive","Pipedrive.html#method-c-pipelines","()","<p>Getting pipeline service object(PipeRocket::Servcice)\n"],["stage","PipeRocket::Deal","PipeRocket/Deal.html#method-i-stage","()","<p>Returns PipeRocket::Stage object corresponding to current deal stage\n"],["stages","Pipedrive","Pipedrive.html#method-c-stages","()","<p>Getting stages service object(PipeRocket::Servcice)\n"],["transform_custom_fields","PipeRocket::Service","PipeRocket/Service.html#method-i-transform_custom_fields","(params)","<p>Trasform custom fields from their names to keys\n"],["transform_field_name","PipeRocket::Entity","PipeRocket/Entity.html#method-i-transform_field_name","(key, name)","<p>Override custom field name if it present in CUSTOM_FIELD_NAMES\n"],["update","PipeRocket::Service","PipeRocket/Service.html#method-i-update","(id, params)","<p>Update @resource_name object by id\n"],["value","PipeRocket::Field","PipeRocket/Field.html#method-i-value","()","<p>Return value of field\n"]]}}